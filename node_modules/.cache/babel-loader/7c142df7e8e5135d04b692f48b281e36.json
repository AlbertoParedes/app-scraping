{"ast":null,"code":"import _assertThisInitialized from \"C:\\\\Users\\\\Alberto\\\\Documents\\\\workspaces\\\\react\\\\YOSEO-SCRIPTS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\Users\\\\Alberto\\\\Documents\\\\workspaces\\\\react\\\\YOSEO-SCRIPTS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Alberto\\\\Documents\\\\workspaces\\\\react\\\\YOSEO-SCRIPTS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Alberto\\\\Documents\\\\workspaces\\\\react\\\\YOSEO-SCRIPTS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Alberto\\\\Documents\\\\workspaces\\\\react\\\\YOSEO-SCRIPTS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Alberto\\\\Documents\\\\workspaces\\\\react\\\\YOSEO-SCRIPTS\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alberto\\\\Documents\\\\workspaces\\\\react\\\\YOSEO-SCRIPTS\\\\src\\\\components\\\\ContainerApp\\\\Categorias\\\\PanelAhrefsKeywords\\\\ExcelButton.js\";\nimport React, { Component } from 'react';\nimport XLSX from 'xlsx';\n\nvar SheetJS =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SheetJS, _Component);\n\n  function SheetJS(props) {\n    var _this;\n\n    _classCallCheck(this, SheetJS);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SheetJS).call(this, props));\n\n    _this.handleFile = function (file) {\n      /* Boilerplate to set up FileReader */\n      var reader = new FileReader();\n      var rABS = !!reader.readAsBinaryString;\n\n      reader.onload = function (e) {\n        /* Parse data */\n        var bstr = e.target.result;\n        var wb = XLSX.read(bstr, {\n          type: rABS ? 'binary' : 'array'\n        });\n        /* Get first worksheet */\n\n        console.log(file);\n        var wsname = wb.SheetNames[0];\n        var ws = wb.Sheets[wsname];\n        /* Convert array of arrays */\n\n        var data = XLSX.utils.sheet_to_json(ws, {\n          header: 1\n        });\n        /* Update state */\n\n        var cols = make_cols(ws['!ref']);\n\n        _this.props.getDataExcel({\n          nameFile: file.name,\n          sheetName: wb.SheetNames[0],\n          data: data,\n          cols: cols\n        });\n\n        _this.setState({\n          data: data,\n          cols: make_cols(ws['!ref'])\n        });\n      };\n\n      if (rABS) reader.readAsBinaryString(file);else reader.readAsArrayBuffer(file);\n    };\n\n    _this.state = {\n      data: [],\n      cols: []\n    };\n    return _this;\n  }\n\n  _createClass(SheetJS, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DragDropFile, {\n        handleFile: this.handleFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(DataInput, {\n        handleFile: this.handleFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SheetJS;\n}(Component);\n\nexport default SheetJS;\n\nvar DragDropFile =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DragDropFile, _React$Component);\n\n  function DragDropFile(props) {\n    var _this2;\n\n    _classCallCheck(this, DragDropFile);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DragDropFile).call(this, props));\n    _this2.onDrop = _this2.onDrop.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n\n  _createClass(DragDropFile, [{\n    key: \"suppress\",\n    value: function suppress(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(evt) {\n      evt.stopPropagation();\n      evt.preventDefault();\n      var files = evt.dataTransfer.files;\n      if (files && files[0]) this.props.handleFile(files[0]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        onDrop: this.onDrop,\n        onDragEnter: this.suppress,\n        onDragOver: this.suppress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return DragDropFile;\n}(React.Component);\n\nvar DataInput =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(DataInput, _React$Component2);\n\n  function DataInput(props) {\n    var _this3;\n\n    _classCallCheck(this, DataInput);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(DataInput).call(this, props));\n\n    _this3.handleChange = function (e) {\n      var files = e.target.files;\n      if (files && files[0]) _this3.props.handleFile(files[0]);\n    };\n\n    return _this3;\n  }\n\n  _createClass(DataInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        id: \"file_excel\",\n        accept: SheetJSFT,\n        onChange: this.handleChange,\n        name: \"file_excel\",\n        className: \"display_none\",\n        \"data-multiple-caption\": \"{count} files selected\",\n        multiple: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"file_excel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"button-upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Documento nuevo\")));\n    }\n  }]);\n\n  return DataInput;\n}(React.Component);\n/* list of supported file types */\n\n\nvar SheetJSFT = [\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"].map(function (x) {\n  return \".\" + x;\n}).join(\",\");\n/* generate an array of column objects */\n\nvar make_cols = function make_cols(refstr) {\n  var o = [],\n      C = XLSX.utils.decode_range(refstr).e.c + 1;\n\n  for (var i = 0; i < C; ++i) {\n    o[i] = {\n      name: XLSX.utils.encode_col(i),\n      key: i\n    };\n  }\n\n  return o;\n};","map":{"version":3,"sources":["C:\\Users\\Alberto\\Documents\\workspaces\\react\\YOSEO-SCRIPTS\\src\\components\\ContainerApp\\Categorias\\PanelAhrefsKeywords\\ExcelButton.js"],"names":["React","Component","XLSX","SheetJS","props","handleFile","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","read","type","console","log","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","header","cols","make_cols","getDataExcel","nameFile","name","sheetName","setState","readAsArrayBuffer","state","DragDropFile","onDrop","bind","evt","stopPropagation","preventDefault","files","dataTransfer","suppress","children","DataInput","handleChange","SheetJSFT","map","x","join","refstr","o","C","decode_range","c","i","encode_col","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport XLSX from 'xlsx';\r\n\r\nclass SheetJS extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      cols: []\r\n    };\r\n  };\r\n  handleFile = file => {\r\n    /* Boilerplate to set up FileReader */\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n    reader.onload = (e) => {\r\n      /* Parse data */\r\n      const bstr = e.target.result;\r\n\r\n\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' });\r\n      /* Get first worksheet */\r\n      console.log(file);\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n      /* Update state */\r\n      const cols = make_cols(ws['!ref'])\r\n      this.props.getDataExcel({ nameFile: file.name, sheetName: wb.SheetNames[0], data, cols });\r\n\r\n      this.setState({ data: data, cols: make_cols(ws['!ref']) });\r\n    };\r\n    if (rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DragDropFile handleFile={this.handleFile}>\r\n        <DataInput handleFile={this.handleFile} />\r\n      </DragDropFile>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SheetJS;\r\n\r\nclass DragDropFile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n  suppress(evt) { evt.stopPropagation(); evt.preventDefault(); };\r\n  onDrop(evt) {\r\n    evt.stopPropagation(); evt.preventDefault();\r\n    const files = evt.dataTransfer.files;\r\n    if (files && files[0]) this.props.handleFile(files[0]);\r\n  }\r\n  render() {\r\n    return (\r\n      <div onDrop={this.onDrop} onDragEnter={this.suppress} onDragOver={this.suppress}>\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass DataInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n  handleChange = (e) => {\r\n    const files = e.target.files;\r\n    if (files && files[0]) this.props.handleFile(files[0]);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <input type=\"file\" id=\"file_excel\" accept={SheetJSFT} onChange={this.handleChange} name=\"file_excel\" className=\"display_none\" data-multiple-caption=\"{count} files selected\" multiple=\"\" />\r\n        <label htmlFor=\"file_excel\">\r\n          <div className='button-upload'>Documento nuevo</div>\r\n        </label>\r\n      \r\n       \r\n      \r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/* list of supported file types */\r\nconst SheetJSFT = [\r\n  \"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function (x) { return \".\" + x; }).join(\",\");\r\n\r\n/* generate an array of column objects */\r\nconst make_cols = refstr => {\r\n  let o = [], C = XLSX.utils.decode_range(refstr).e.c + 1;\r\n  for (var i = 0; i < C; ++i) o[i] = { name: XLSX.utils.encode_col(i), key: i }\r\n  return o;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}